0001   0000             ; In the memory, store the divisor first, then the dividend
0002   0000             	.ORG	0000H
0003   0000 21 50 00    START:	LXI	H,0050H	; Divisor (2^n)
0004   0003 7E          	MOV	A,M
0005   0004 0E 00       	MVI	C,00H	; Keeps track of 'n'
0006   0006             ; To find out the power (n) to which 2 is raised
0007   0006 D2 0A 00    	JNC	L1
0008   0009 3F          L3:	CMC
0009   000A 1F          L1:	RAR
0010   000B FE 00       	CPI	00H
0011   000D CA 17 00    	JZ	L2
0012   0010 0C          	INR	C
0013   0011 DA 09 00    	JC	L3
0014   0014 C3 0A 00    	JMP	L1
0015   0017             ; Now, we know 'n', thus we can find the quotient
0016   0017 23          L2:	INX	H	; Dividend (even no.)
0017   0018 7E          	MOV	A,M
0018   0019 D2 1D 00    	JNC	L4
0019   001C 3F          L6:	CMC
0020   001D 1F          L4:	RAR
0021   001E 0D          	DCR C
0022   001F CA 28 00    	JZ	L5
0023   0022 DA 1C 00    	JC	L6
0024   0025 C3 1D 00    	JMP	L4
0025   0028 23          L5:	INX	H	; To store the quotient
0026   0029 77          	MOV	M,A
0027   002A 76          	HLT
0028   002B             
Number of errors = 0
